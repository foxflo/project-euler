#How many distinct terms are in the sequence generated by a^b for 2 <= a <= 100 and 2 <= b <= 100?

""" Technically, I should have different limits for a and b for this to be truly generalizable
"""

def p29(lower=2,upper=100):
    
    """ Find the largest power of lower that's less than or equal to upper
        Could do it with logs, which would likely be a bit faster
    """
    power_counter=0
    temp=lower
    while temp <= upper:
        temp*=lower
        power_counter+=1
    counter=0
    num_to_add=[]
    set_true=[False]*(power_counter*upper)
    for i in xrange(1,power_counter+1):
        for j in xrange(lower, upper+1):
                if not set_true[i*j-1]:
                    set_true[i*j-1]=True
                    counter+=1
        num_to_add.append(counter)
    total=0
    done=[False]*(upper-lower+1)
    for i in xrange(lower, upper+1):
        if done[i-lower]:
            continue
        power_counter=0
        temp=i
        while temp <= upper:
            done[temp-lower]=True
            temp*=i
            power_counter+=1
        total+=num_to_add[power_counter-1]
    print total
        
p29()
